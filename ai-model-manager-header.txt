// main/ai_model_manager.h
#pragma once

#include <tensorflow/lite/micro/micro_interpreter.h>
#include <tensorflow/lite/micro/micro_resolver.h>
#include <tensorflow/lite/schema/schema_generated.h>

class AIModelManager {
public:
    AIModelManager();
    ~AIModelManager();

    bool loadModel(const char* modelPath);
    bool runInference(float* inputData, float* outputData);
    
    // Anomaly detection
    bool detectAnomalies(const float* data, size_t length);

private:
    static constexpr size_t TENSOR_ARENA_SIZE = 16 * 1024;

    const tflite::Model* model;
    tflite::MicroResolver* resolver;
    tflite::MicroInterpreter* interpreter;
    
    uint8_t tensorArena[TENSOR_ARENA_SIZE];
};
